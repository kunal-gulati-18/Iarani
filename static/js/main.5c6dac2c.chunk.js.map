{"version":3,"sources":["components/Navbar.js","Redux/Constants/constants.js","components/Component1.js","Redux/Actions/noteAction.js","components/Component2.js","App.js","Redux/Reducer/noteReducer.js","Redux/store.js","index.js"],"names":["NavbarComponent","Navbar","bg","variant","className","Brand","ADD_NOTE","UPDATE_NOTE","DELETE_NOTE","ERROR_CONSTANT","Component1","useState","Date","dateval","setValue","date_value","setDateValue","title","setTitle","description","setDescription","show","setShow","showAlert","setShowAlert","dispatch","useDispatch","handleClose","useEffect","document","querySelector","window","setTimeout","Alert","onChange","dateUpdated","toDateString","split","shift","join","value","Modal","onHide","Header","closeButton","Title","id","Body","Form","Group","controlId","Label","Control","type","placeholder","e","target","as","rows","Footer","Button","onClick","getState","a","toUpperCase","payload","localStorage","setItem","JSON","stringify","data","err","console","log","addNotes","alert","Component2","notesDetails","useSelector","state","error","idValue","setIDValue","newDate","setNewDate","oldDate","setOldDate","showVal","setShowVal","successVal","setSuccessVal","deleteVal","setDeleteVal","style","display","Object","keys","length","entries","map","item","datevalue","titleval","descriptionval","handleUpdate","readOnly","hidden","compareDate","Number","flag","idVal","titleVal","descriptionVal","updateNotes","idValues","newDateVal","App","Container","Row","Col","md","lg","sm","xs","initialState","getItem","parse","middleware","thunk","store","createStore","action","obj","key","copy_object","push","objCopy","find","items","updatedData","filter","updateObj","flagval","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"+RAoBeA,G,MAhBO,WAEnB,OACA,mCAED,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,UAAU,eAA3C,SACE,eAACH,EAAA,EAAOI,MAAR,WAEE,mBAAGD,UAAU,kCAFf,oB,gGCVSE,EAAW,WACXC,EAAc,cACdC,EAAc,cACdC,EAAiB,iBCwGfC,EApGI,WAAO,IAAD,EAEOC,mBAAS,IAAIC,MAFpB,mBAEdC,EAFc,KAELC,EAFK,OAGcH,mBAAS,IAHvB,mBAGdI,EAHc,KAGFC,EAHE,OAIKL,mBAAS,IAJd,mBAIdM,EAJc,KAIPC,EAJO,OAKiBP,mBAAS,IAL1B,mBAKdQ,EALc,KAKDC,EALC,OAMGT,oBAAS,GANZ,mBAMdU,EANc,KAMRC,EANQ,OAOaX,oBAAS,GAPtB,mBAOdY,EAPc,KAOHC,EAPG,KAQfC,EAAWC,cAiBXC,EAAc,WAEhBT,EAAS,IACTE,EAAe,IACfE,GAAQ,IA2BZ,OARAM,qBAAU,WACFC,SAASC,cAAc,cACvBC,OAAOC,YAAW,WACdR,GAAa,KACd,OAER,CAACD,IAGA,mCACI,sBAAKnB,UAAU,aAAf,UACI,qBAAIA,UAAU,qBAAd,UAAmC,mBAAGA,UAAU,yBAAhD,kBAEiB,GAAbmB,GACA,cAACU,EAAA,EAAD,CAAO9B,QAAQ,UAAUC,UAAU,WAAnC,qCAIJ,cAAC,IAAD,CAAU8B,SAxDD,SAACrB,GAElBC,EAASD,GAET,IAAIsB,EAActB,EAAQuB,gBAC1BD,EAAcA,EAAYE,MAAM,MAEpBC,QAEZH,EAAcA,EAAYI,KAAK,KAE/BvB,EAAamB,GAEbb,GAAQ,IA2CkCkB,MAAO3B,IAEzC,eAAC4B,EAAA,EAAD,CAAOpB,KAAMA,EAAMqB,OAAQf,EAA3B,UACI,cAACc,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,CAAaC,GAAG,qBAAhB,SAAsC/B,GAA0B,cAEpE,cAAC0B,EAAA,EAAMM,KAAP,UACI,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,gBAAgBd,MAAOvB,EAAOiB,SAAU,SAACqB,GAAD,OAAOrC,EAASqC,EAAEC,OAAOhB,aAG3G,eAACQ,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAcK,GAAG,WAAWC,KAAM,EAAGlB,MAAOrB,EAAae,SAAU,SAACqB,GAAD,OAAOnC,EAAemC,EAAEC,OAAOhB,kBAI9G,eAACC,EAAA,EAAMkB,OAAP,WACI,cAACC,EAAA,EAAD,CAAQzD,QAAQ,YAAY0D,QArD1B,WAEL,IAAT5C,GAKJQ,EC5CgB,SAACZ,EAASI,EAAOE,GAAjB,8CAAiC,WAAOM,EAAUqC,GAAjB,SAAAC,EAAA,sDAErDlD,EAAUA,EAAQmD,cAElB,IACIvC,EAAS,CACL4B,KAAM/C,EACN2D,QAAS,CAAEpD,UAASI,QAAOE,iBAI/B+C,aAAaC,QAAQ,QAASC,KAAKC,UAAUP,IAAWQ,OACxDJ,aAAaC,QAAQ,KAAMC,KAAKC,UAAUP,IAAWhB,KAGzD,MAAOyB,GAEHC,QAAQC,IAAIF,GAjBqC,2CAAjC,wDD4CPG,CAAS3D,EAAYE,EAAOE,IACrCG,GAAQ,GACRJ,EAAS,IACTE,EAAe,IACfI,GAAa,IARTmD,MAAM,iCAkDM,sBAGA,cAACf,EAAA,EAAD,CAAQzD,QAAQ,SAAS0D,QAASlC,EAAlC,iCEoPTiD,G,MA/UI,WACf,IAAMnD,EAAWC,cACbmD,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMT,QAC1CU,EAAQF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAHlB,EAISrE,mBAAS,GAJlB,mBAIdsE,EAJc,KAILC,EAJK,OAKSvE,mBAAS,IALlB,mBAKdwE,EALc,KAKLC,EALK,OAMSzE,mBAAS,IANlB,mBAMd0E,EANc,KAMLC,EANK,OAQK3E,mBAAS,IARd,mBAQdM,EARc,KAQPC,EARO,OASiBP,mBAAS,IAT1B,mBASdQ,EATc,KASDC,EATC,OAUGT,oBAAS,GAVZ,mBAUdU,EAVc,KAURC,EAVQ,OAWSX,oBAAS,GAXlB,mBAWd4E,EAXc,KAWLC,EAXK,OAYe7E,oBAAS,GAZxB,mBAYd8E,EAZc,KAYFC,EAZE,OAaa/E,oBAAS,GAbtB,mBAadgF,EAbc,KAaHC,EAbG,KAuBfjE,EAAc,WAChBL,GAAQ,IAqLZ,OA/BAM,qBAAU,WAEFoD,IACAQ,GAAW,GACXI,GAAa,IAMb/D,SAASC,cAAc,cACvBC,OAAOC,YAAW,WACdH,SAASC,cAAc,aAAa+D,MAAMC,QAAU,SACrD,KAGHjE,SAASC,cAAc,cACvBC,OAAOC,YAAW,WACd0D,GAAc,KACf,KAGH7D,SAASC,cAAc,eACvBC,OAAOC,YAAW,WACd4D,GAAa,KACd,OAKR,CAACnE,EAAUuD,EAAOS,EAAYE,IAE7B,mCAEI,sBAAKvF,UAAU,aAAf,UAEI,qBAAIA,UAAU,qBAAd,UAAmC,mBAAGA,UAAU,gBAAhD,cAEkB,GAAdqF,GACA,cAACxD,EAAA,EAAD,CAAO9B,QAAQ,UAAUC,UAAU,WAAnC,uCAMa,GAAbuF,GACA,cAAC1D,EAAA,EAAD,CAAO9B,QAAQ,SAASC,UAAU,YAAlC,uCAIkC,IAArC2F,OAAOC,KAAKnB,GAAcoB,OACvBF,OAAOG,QAAQrB,GAAcsB,KAAI,SAAAH,GAAI,OAEjC,sBAAK5F,UAAU,kBAAf,UACI,qBAAIA,UAAU,eAAd,UACI,mBAAGA,UAAU,yBADjB,IAC8C4F,EAAK,MAEnD,6BAIQA,EAAK,GAAGG,KAAI,SAAAC,GAAI,OAEZ,sBAAKhG,UAAU,aAAf,UACI,+BAAmBgG,EAAKnF,MAAxB,IAA+B,mBAAGb,UAAU,uBAAuByD,QAAS,WA9NhG,IAACwC,EAAWC,EAAUC,EAArBF,EA8NmHL,EAAK,GA9N7GM,EA8NiHF,EAAKnF,MA9N5GsF,EA8NmHH,EAAKjF,YA7N9JiE,EAAWiB,GACXnF,EAASoF,GACTlF,EAAemF,GACfjF,GAAQ,MA0N4B,IAA+I,mBAAGlB,UAAU,wBAAwByD,QAAS,YAnNhN,SAACwC,EAAWvD,EAAIwD,EAAUC,GAE3CnB,EAAWiB,GACXf,EAAWe,GACXnB,EAAWpC,GACX5B,EAASoF,GACTlF,EAAemF,GACff,GAAW,GA4M8NgB,CAAaR,EAAK,GAAII,EAAKtD,GAAIsD,EAAKnF,MAAOmF,EAAKjF,kBAA5OiF,EAAKtD,IACd,qCAapB,qBAAK1C,UAAU,WAAf,8BAKR,eAACqC,EAAA,EAAD,CAAOpB,KAAMA,EAAMqB,OAAQf,EAA3B,UACI,cAACc,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,CAAaC,GAAG,qBAAhB,SAAsCqC,GAAoB,cAE9D,cAAC1C,EAAA,EAAMM,KAAP,UACI,eAACC,EAAA,EAAD,WAEI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,gBAAgBd,MAAOvB,EAAOiB,SAAU,SAACqB,GAAD,OAAOrC,EAASqC,EAAEC,OAAOhB,QAAQiE,UAAQ,OAG3H,eAACzD,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAcK,GAAG,WAAWC,KAAM,EAAGlB,MAAOrB,EAAae,SAAU,SAACqB,GAAD,OAAOnC,EAAemC,EAAEC,OAAOhB,QAAQiE,UAAQ,YAI9H,cAAChE,EAAA,EAAMkB,OAAP,UAEI,cAACC,EAAA,EAAD,CAAQzD,QAAQ,SAAS0D,QAASlC,EAAlC,wBASR,eAACc,EAAA,EAAD,CAAOpB,KAAMkE,EAAS7C,OAxHT,WACrBjB,ED9GmB,uCAAM,WAAOA,EAAUqC,GAAjB,SAAAC,EAAA,sDAC7B,IACItC,EAAS,CACL4B,KAAM5C,IAGVyD,aAAaC,QAAQ,QAASC,KAAKC,UAAUP,IAAWQ,OAG5D,MAAOC,GACHC,QAAQC,IAAIF,GAVa,2CAAN,yDC+GnBiB,GAAW,IAsHH,UAEQR,GACA,cAAC/C,EAAA,EAAD,CAAO9B,QAAQ,SAASC,UAAU,WAAlC,SACK4E,IAKT,cAACvC,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,CAAaC,GAAG,qBAAhB,SAAsCqC,GAAoB,OAE9D,cAAC1C,EAAA,EAAMM,KAAP,UACI,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,mBAAmBwD,QAAM,EAA/C,UACI,cAAC1D,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOb,MAAO6C,EAASnD,SAAU,SAACqB,GAAD,OAAO+B,EAAW/B,EAAEC,OAAOhB,QAAQiE,UAAQ,OAEnG,eAACzD,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,mBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,eAAed,MAAO2C,EAASjD,SAAU,SAACqB,GAAD,OAAO6B,EAAW7B,EAAEC,OAAOhB,aAE9G,eAACQ,EAAA,EAAKC,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,oBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,YAAY,gBAAgBd,MAAOvB,EAAOiB,SAAU,SAACqB,GAAD,OAAOrC,EAASqC,EAAEC,OAAOhB,aAG3G,eAACQ,EAAA,EAAKC,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAcK,GAAG,WAAWC,KAAM,EAAGlB,MAAOrB,EAAae,SAAU,SAACqB,GAAD,OAAOnC,EAAemC,EAAEC,OAAOhB,kBAI9G,eAACC,EAAA,EAAMkB,OAAP,WAEI,cAACC,EAAA,EAAD,CAAQzD,QAAQ,YAAY0D,QA3R/B,WAEb,GAAe,IAAXsB,GAA0B,IAATlE,EAArB,CAKA,IAAI0F,EAAcxB,EAElB,GAA8B,KAD9BwB,EAAcA,EAAYtE,MAAM,MAChB,GAAG4D,QAAkC,IAAlBU,EAAY,IAA8B,IAAlBA,EAAY,IAA8B,IAAlBA,EAAY,IAAmC,IAAvBA,EAAYV,QAA0C,IAA1BU,EAAY,GAAGV,OAKtJ,GAAIU,EAAY,GAAK,GAAKA,EAAY,GAAK,GACvChC,MAAM,sBADV,CAMA,GADAgC,EAAY,GAAKA,EAAY,GAAG3C,cACV,OAAlB2C,EAAY,IAAiC,OAAlBA,EAAY,IAAiC,OAAlBA,EAAY,IAAiC,OAAlBA,EAAY,IAC7F,GAAIA,EAAY,GAAK,GAAKA,EAAY,GAAK,GAEvC,YADAhC,MAAM,qCAIT,GAAsB,OAAlBgC,EAAY,GAGjB,GADAA,EAAY,GAAKC,OAAOD,EAAY,IAChCA,EAAY,GAAK,GAAK,GACtB,GAAIA,EAAY,GAAK,KAAO,GACxB,GAAIA,EAAY,GAAK,KAAO,IACpBA,EAAY,GAAK,GAAKA,EAAY,GAAK,IAEvC,YADAhC,MAAM,uCAOd,GAAIgC,EAAY,GAAK,GAAKA,EAAY,GAAK,GAEvC,YADAhC,MAAM,uCAOd,GAAIgC,EAAY,GAAK,GAAKA,EAAY,GAAK,GAEvC,YADAhC,MAAM,sCAKlB,GAAIQ,IAAYE,EACZ,IAAIwB,EAAO,UAEV,CACGA,EAAO,KACXvB,EAAWH,GAGf1D,EDhFmB,SAACqF,EAAO3B,EAASE,EAAS0B,EAAUC,EAAgBH,GAApD,8CAA6D,WAAOpF,EAAUqC,GAAjB,SAAAC,EAAA,sDAEpFoB,EAAUA,EAAQnB,cAClBqB,EAAUA,EAAQrB,cAClB,IAEIvC,EAAS,CACL4B,KAAM9C,EACN0D,QAAS,CAAE6C,QAAO3B,UAASE,UAAS0B,WAAUC,iBAAgBH,UAGlE3C,aAAaC,QAAQ,QAASC,KAAKC,UAAUP,IAAWQ,OAG5D,MAAOC,GACHC,QAAQC,IAAIF,GAfoE,2CAA7D,wDCgFV0C,CAAYhC,EAASE,EAASE,EAASpE,EAAOE,EAAa0F,IACpErB,GAAW,GACXE,GAAc,QAtDVf,MAAM,+CAPNA,MAAM,uCAwRM,oBAGA,cAACf,EAAA,EAAD,CAAQzD,QAAQ,SAAS0D,QA3N5B,WACb,GAAe,IAAXsB,GAA0B,IAATlE,EAArB,CAKA,IAAI0F,EAAcxB,EAElB,GAA8B,KAD9BwB,EAAcA,EAAYtE,MAAM,MAChB,GAAG4D,QAAkC,IAAlBU,EAAY,IAA8B,IAAlBA,EAAY,IAA8B,IAAlBA,EAAY,IAAmC,IAAvBA,EAAYV,QAA0C,IAA1BU,EAAY,GAAGV,OAKtJ,GAAIU,EAAY,GAAK,GAAKA,EAAY,GAAK,GACvChC,MAAM,sBADV,CAMA,GADAgC,EAAY,GAAKA,EAAY,GAAG3C,cACV,OAAlB2C,EAAY,IAAiC,OAAlBA,EAAY,IAAiC,OAAlBA,EAAY,IAAiC,OAAlBA,EAAY,IAC7F,GAAIA,EAAY,GAAK,GAAKA,EAAY,GAAK,GAEvC,YADAhC,MAAM,qCAIT,GAAsB,OAAlBgC,EAAY,GAGjB,GADAA,EAAY,GAAKC,OAAOD,EAAY,IAChCA,EAAY,GAAK,GAAK,GACtB,GAAIA,EAAY,GAAK,KAAO,GACxB,GAAIA,EAAY,GAAK,KAAO,IACpBA,EAAY,GAAK,GAAKA,EAAY,GAAK,IAEvC,YADAhC,MAAM,uCAOd,GAAIgC,EAAY,GAAK,GAAKA,EAAY,GAAK,GAEvC,YADAhC,MAAM,uCAOd,GAAIgC,EAAY,GAAK,GAAKA,EAAY,GAAK,GAEvC,YADAhC,MAAM,sCDjHC,IAACuC,EAAUC,ECuH9B1F,GDvHoByF,ECuHCjC,EDvHSkC,ECuHAhC,EDvHX,uCAA0B,WAAO1D,EAAUqC,GAAjB,SAAAC,EAAA,sDAEjDoD,EAAaA,EAAWnD,cACxB,IACIvC,EAAS,CACL4B,KAAM7C,EACNyD,QAAS,CAAEiD,WAAUC,gBAGzBjD,aAAaC,QAAQ,QAASC,KAAKC,UAAUP,IAAWQ,OAG5D,MAAOC,GACHC,QAAQC,IAAIF,GAbiC,2CAA1B,0DCwHnBiB,GAAW,GACXI,GAAa,QA/CTjB,MAAM,+CAPNA,MAAM,uCAyNM,iC,8BCjTTyC,MAlBf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA9B,SACE,cAAC,EAAD,MAEF,cAACJ,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA9B,SACA,cAAC,EAAD,e,gCCXJC,EAAe,CACjBtD,KAHcJ,aAAa2D,QAAQ,SAAWzD,KAAK0D,MAAM5D,aAAa2D,QAAQ,UAAY,GAI1F/E,GAHKoB,aAAa2D,QAAQ,MAAQzD,KAAK0D,MAAM5D,aAAa2D,QAAQ,OAAS,EAI3E7C,MAAO,ICHL+C,EAAW,CAACC,KAGHC,EAFHC,uBDKe,WAAmC,IAAlCnD,EAAiC,uDAAzB6C,EAAcO,EAAW,uCAEzD,OAAQA,EAAO9E,MACX,KAAK/C,EAED,IAAIuG,EAAO,EACPuB,EAAM,GAHd,EAI0CD,EAAOlE,QAAvCpD,EAJV,EAIUA,QAASI,EAJnB,EAImBA,MAAOE,EAJ1B,EAI0BA,YACtB,GAAuC,IAAnC4E,OAAOC,KAAKjB,EAAMT,MAAM2B,OAgCvB,CACD,IAAInD,EAAKiC,EAAMjC,GAGf,OAFAsF,EAAIvH,GAAW,CAAC,CAAEiC,KAAI7B,QAAOE,gBAEtB,CACHmD,KAAM8D,EACNtF,GAAIA,EAAK,GArCb,IAAK,IAAIuF,KAAOtD,EAAMT,KAClB,GAAI+D,GAAOxH,EAAS,CAChBgG,EAAO,EACP,MAIR,GAAa,IAATA,EAAY,CAEZ,IAAIyB,EAAW,eAAQvD,EAAMT,MACzBxB,EAAKiC,EAAMjC,GAEf,OADAwF,EAAYD,GAAKE,KAAK,CAAEzF,KAAI7B,QAAOE,gBAC5B,CACHmD,KAAMgE,EACNxF,GAAIA,EAAK,GAIZ,GAAa,IAAT+D,EAAY,CAEjB,IAAIyB,EAAW,eAAQvD,EAAMT,MACzBxB,EAAKiC,EAAMjC,GAEf,OADAwF,EAAYzH,GAAW,CAAC,CAAEiC,KAAI7B,QAAOE,gBAC9B,CACHmD,KAAMgE,EACNxF,GAAIA,EAAK,GAqBzB,KAAKvC,EAAL,MACsE4H,EAAOlE,QAAnE6C,EADV,EACUA,MAAO3B,EADjB,EACiBA,QAASE,EAD1B,EAC0BA,QAAS0B,EADnC,EACmCA,SAAUC,EAD7C,EAC6CA,eACzC,GAAa,SAD4CH,EAD7D,EAC6DA,MAEzD,CAEI,IAAI2B,EAAUpE,KAAK0D,MAAM1D,KAAKC,UAAUU,EAAMT,OAoB9C,OAlBAyB,OAAOG,QAAQsC,GAASC,MAAK,SAAArC,GACrBA,EAAK,IAAMjB,IACXiB,EAAK,GAAGqC,MAAK,SAAAC,GACLA,EAAM5F,IAAMgE,IACZ4B,EAAMzH,MAAQ8F,GAAsB2B,EAAMzH,MAC1CyH,EAAMvH,YAAc6F,GAAkC0B,EAAMvH,gBAKpEqH,EAAQpC,EAAK,IAAMA,EAAK,OAQzB,CACH9B,KAAMkE,EACN1F,GAAIiC,EAAMjC,IAId,IAAI0F,EAAUpE,KAAK0D,MAAM1D,KAAKC,UAAUU,EAAMT,OAE1CqE,EAAc,GAelB,GAdA5C,OAAOG,QAAQsC,GAASC,MAAK,SAAArC,GACrBA,EAAK,IAAMf,IAEXsD,EAAcvC,EAAK,GAAGwC,QAAO,SAAAF,GAAK,OAAIA,EAAM5F,KAAOgE,KACnD0B,EAAQpC,EAAK,IAAMuC,EACY,GAA3BH,EAAQpC,EAAK,IAAIH,eACTuC,EAAQpC,EAAK,QAQ7BoC,EAAQrD,GAAU,CAClB,IAAIrC,EAAKgE,EACL7F,EAAQ8F,EACR5F,EAAc6F,EAClBwB,EAAQrD,GAASoD,KAAK,CAAEzF,KAAI7B,QAAOE,oBAElC,CACD,IAAI2B,EAAKgE,EACL7F,EAAQ8F,EACR5F,EAAc6F,EAClBwB,EAAQrD,GAAW,CAAC,CAAErC,KAAI7B,QAAOE,gBAIrC,MAAO,CACHmD,KAAMkE,EACN1F,GAAIiC,EAAMjC,IAMtB,KAAKtC,EAAL,MAEmC2H,EAAOlE,QAAhCiD,EAFV,EAEUA,SAAUC,EAFpB,EAEoBA,WACZ0B,EAAYzE,KAAK0D,MAAM1D,KAAKC,UAAUU,EAAMT,OAC5CqE,EAAc,GACdG,EAAU,EAmBd,GAlBA/C,OAAOG,QAAQ2C,GAAWJ,MAAK,SAAArC,GACvBA,EAAK,IAAMe,IAEXwB,EAAcvC,EAAK,GAAGwC,QAAO,SAAAF,GAAK,OAAIA,EAAM5F,KAAOoE,KACnD2B,EAAUzC,EAAK,IAAMuC,EACY,GAA7BE,EAAUzC,EAAK,IAAIH,eACX4C,EAAUzC,EAAK,IAG3B0C,EAAU,MASH,GAAXA,EAEA,MAAO,CACHxE,KAAMuE,EACN/F,GAAIiC,EAAMjC,GACVkC,MAAO,IAIV,GAAe,GAAX8D,EACL,MAAO,CACHxE,KAAMuE,EACN/F,GAAIiC,EAAMjC,GACVkC,MAAO,qDAInB,KAAKvE,EAAgB,MAAO,CACxB6D,KAAMS,EAAMT,KACZxB,GAAIiC,EAAMjC,GACVkC,MAAO,IAIX,QAAS,OAAOD,KClLYgE,8BAAoBC,kBAAe,WAAf,EAAmBjB,KCE3EkB,IAASC,OACP,cAAC,IAAD,CAAUjB,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFpG,SAASsH,eAAe,W","file":"static/js/main.5c6dac2c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Navbar,Button} from 'react-bootstrap'\r\nimport './css/Navbar.css'\r\n\r\nconst NavbarComponent=()=>{\r\n   \r\n   return(\r\n   <>\r\n   \r\n  <Navbar bg=\"dark\" variant=\"dark\" className=\"navbar_style\">\r\n    <Navbar.Brand>\r\n     \r\n      <i className=\"far fa-sticky-note notes_icon\"></i> NoteApp\r\n    </Navbar.Brand>\r\n  </Navbar>\r\n  \r\n    </>\r\n   )\r\n}\r\n\r\nexport default NavbarComponent;","export const ADD_NOTE = \"ADD_NOTE\"\r\nexport const UPDATE_NOTE = \"UPDATE_NOTE\"\r\nexport const DELETE_NOTE = \"DELETE_NOTE\"\r\nexport const ERROR_CONSTANT = \"ERROR_CONSTANT\"","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Modal, Button, Alert } from 'react-bootstrap';\r\nimport './css/Component1.css'\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport { addNotes } from '../Redux/Actions/noteAction'\r\nconst Component1 = () => {\r\n\r\n    const [dateval, setValue] = useState(new Date());\r\n    const [date_value, setDateValue] = useState('');\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [show, setShow] = useState(false)\r\n    const [showAlert, setShowAlert] = useState(false)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (dateval) => {\r\n\r\n        setValue(dateval);\r\n\r\n        var dateUpdated = dateval.toDateString();\r\n        dateUpdated = dateUpdated.split(' ');\r\n\r\n        dateUpdated.shift()  //removing first element of array\r\n\r\n        dateUpdated = dateUpdated.join(' ')\r\n\r\n        setDateValue(dateUpdated)\r\n\r\n        setShow(true);\r\n    }\r\n    const handleClose = () => {\r\n\r\n        setTitle('');\r\n        setDescription('');\r\n        setShow(false);\r\n\r\n    }\r\n\r\n    const handleAddNote = () => {\r\n\r\n        if (title == \"\") {\r\n            alert('Title is a mandatory field!!')\r\n            return;\r\n        }\r\n\r\n        dispatch(addNotes(date_value, title, description));\r\n        setShow(false);\r\n        setTitle('');\r\n        setDescription('');\r\n        setShowAlert(true)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (document.querySelector('.alert_id')) {\r\n            window.setTimeout(function () {\r\n                setShowAlert(false)\r\n            }, 3000)\r\n        }\r\n    }, [showAlert])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"component1\">\r\n                <h2 className=\"component1_heading\"><i className=\"fas fa-calendar-week\"></i> Pick a Date</h2>\r\n                {\r\n                    showAlert == true &&\r\n                    <Alert variant=\"success\" className=\"alert_id\">\r\n                        Note Added Successfully\r\n                    </Alert>\r\n                }\r\n                <Calendar onChange={handleChange} value={dateval} />\r\n\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"modal_date_heading\">{date_value ? date_value : \"loading\"}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasictitle\">\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter Title..\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicDesc\">\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={3} value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleAddNote}>\r\n                            ADD NOTE\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={handleClose}>\r\n                            Discard\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Component1;","import { ADD_NOTE, UPDATE_NOTE, DELETE_NOTE, ERROR_CONSTANT } from '../Constants/constants';\r\n\r\n\r\nexport const addNotes = (dateval, title, description) => async (dispatch, getState) => {\r\n\r\n    dateval = dateval.toUpperCase();\r\n\r\n    try {\r\n        dispatch({\r\n            type: ADD_NOTE,\r\n            payload: { dateval, title, description }\r\n        })\r\n\r\n\r\n        localStorage.setItem('notes', JSON.stringify(getState().data))\r\n        localStorage.setItem('id', JSON.stringify(getState().id))\r\n    }\r\n\r\n    catch (err) {\r\n\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nexport const updateNotes = (idVal, newDate, oldDate, titleVal, descriptionVal, flag) => async (dispatch, getState) => {\r\n\r\n    newDate = newDate.toUpperCase();\r\n    oldDate = oldDate.toUpperCase();\r\n    try {\r\n\r\n        dispatch({\r\n            type: UPDATE_NOTE,\r\n            payload: { idVal, newDate, oldDate, titleVal, descriptionVal, flag }\r\n        })\r\n\r\n        localStorage.setItem('notes', JSON.stringify(getState().data))\r\n    }\r\n\r\n    catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\n\r\nexport const deleteNotes = (idValues, newDateVal) => async (dispatch, getState) => {\r\n\r\n    newDateVal = newDateVal.toUpperCase();\r\n    try {\r\n        dispatch({\r\n            type: DELETE_NOTE,\r\n            payload: { idValues, newDateVal }\r\n        })\r\n\r\n        localStorage.setItem('notes', JSON.stringify(getState().data))\r\n    }\r\n\r\n    catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport const handleError = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ERROR_CONSTANT\r\n        })\r\n\r\n        localStorage.setItem('notes', JSON.stringify(getState().data))\r\n    }\r\n\r\n    catch (err) {\r\n        console.log(err)\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Modal, Button, Alert } from 'react-bootstrap';\r\nimport { updateNotes, deleteNotes, handleError } from '../Redux/Actions/noteAction';\r\nimport './css/Component2.css'\r\nconst Component2 = () => {\r\n    const dispatch = useDispatch();\r\n    var notesDetails = useSelector(state => state.data);\r\n    var error = useSelector(state => state.error);\r\n    const [idValue, setIDValue] = useState(0)\r\n    const [newDate, setNewDate] = useState('');\r\n    const [oldDate, setOldDate] = useState('');\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [show, setShow] = useState(false)\r\n    const [showVal, setShowVal] = useState(false)\r\n    const [successVal, setSuccessVal] = useState(false)\r\n    const [deleteVal, setDeleteVal] = useState(false)\r\n\r\n\r\n    const handleClick = (datevalue, titleval, descriptionval) => {\r\n        setNewDate(datevalue)\r\n        setTitle(titleval)\r\n        setDescription(descriptionval)\r\n        setShow(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    const handleUpdate = (datevalue, id, titleval, descriptionval) => {\r\n\r\n        setNewDate(datevalue)\r\n        setOldDate(datevalue)\r\n        setIDValue(id)\r\n        setTitle(titleval)\r\n        setDescription(descriptionval)\r\n        setShowVal(true)\r\n\r\n    }\r\n\r\n    const onUpdate = () => {\r\n\r\n        if (newDate == \"\" || title == \"\") {\r\n            alert('Please Fill the mandatory fields!!')\r\n            return\r\n        }\r\n\r\n        var compareDate = newDate;\r\n        compareDate = compareDate.split(\" \")\r\n        if (compareDate[0].length !== 3 || compareDate[0] == '' || compareDate[1] == '' || compareDate[2] == '' || compareDate.length !== 3 || compareDate[2].length !== 4) {\r\n            alert('Date should be in mmm dd yyyy format!!')\r\n            return;\r\n        }\r\n\r\n        if (compareDate[1] < 1 || compareDate[1] > 31) {\r\n            alert('Invalid Date!!')\r\n            return;\r\n        }\r\n\r\n        compareDate[0] = compareDate[0].toUpperCase();\r\n        if (compareDate[0] == 'APR' || compareDate[0] == 'JUN' || compareDate[0] == 'SEP' || compareDate[0] == 'NOV') {\r\n            if (compareDate[1] < 1 || compareDate[1] > 30) {\r\n                alert('Selected month has 30 days!!')\r\n                return;\r\n            }\r\n        }\r\n        else if (compareDate[0] == 'FEB') {\r\n\r\n            compareDate[2] = Number(compareDate[2]);\r\n            if (compareDate[2] % 4 == 0) {\r\n                if (compareDate[2] % 100 == 0) {\r\n                    if (compareDate[2] % 400 == 0) {\r\n                        if (compareDate[1] < 1 || compareDate[1] > 29) {\r\n                            alert('Selected year is a leap year!!')\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                else {\r\n                    if (compareDate[1] < 1 || compareDate[1] > 29) {\r\n                        alert('Selected year is a leap year!!')\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (compareDate[1] < 1 || compareDate[1] > 28) {\r\n                    alert('Selected year is not a leap year!!')\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        if (newDate === oldDate) {\r\n            var flag = 'yes';\r\n        }\r\n        else {\r\n            var flag = 'no';\r\n            setOldDate(newDate)\r\n        }\r\n\r\n        dispatch(updateNotes(idValue, newDate, oldDate, title, description, flag))\r\n        setShowVal(false)\r\n        setSuccessVal(true)\r\n    }\r\n\r\n    const onDelete = () => {\r\n        if (newDate == \"\" || title == \"\") {\r\n            alert('Please Fill the mandatory fields!!')\r\n            return\r\n        }\r\n\r\n        var compareDate = newDate;\r\n        compareDate = compareDate.split(\" \")\r\n        if (compareDate[0].length !== 3 || compareDate[0] == '' || compareDate[1] == '' || compareDate[2] == '' || compareDate.length !== 3 || compareDate[2].length !== 4) {\r\n            alert('Date should be in mmm dd yyyy format!!')\r\n            return;\r\n        }\r\n\r\n        if (compareDate[1] < 1 || compareDate[1] > 31) {\r\n            alert('Invalid Date!!')\r\n            return;\r\n        }\r\n\r\n        compareDate[0] = compareDate[0].toUpperCase();\r\n        if (compareDate[0] == 'APR' || compareDate[0] == 'JUN' || compareDate[0] == 'SEP' || compareDate[0] == 'NOV') {\r\n            if (compareDate[1] < 1 || compareDate[1] > 30) {\r\n                alert('Selected month has 30 days!!')\r\n                return;\r\n            }\r\n        }\r\n        else if (compareDate[0] == 'FEB') {\r\n\r\n            compareDate[2] = Number(compareDate[2]);\r\n            if (compareDate[2] % 4 == 0) {\r\n                if (compareDate[2] % 100 == 0) {\r\n                    if (compareDate[2] % 400 == 0) {\r\n                        if (compareDate[1] < 1 || compareDate[1] > 29) {\r\n                            alert('Selected year is a leap year!!')\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                else {\r\n                    if (compareDate[1] < 1 || compareDate[1] > 29) {\r\n                        alert('Selected year is a leap year!!')\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            else {\r\n                if (compareDate[1] < 1 || compareDate[1] > 28) {\r\n                    alert('Selected year is not a leap year!!')\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        dispatch(deleteNotes(idValue, newDate))\r\n        setShowVal(false)\r\n        setDeleteVal(true)\r\n    }\r\n\r\n\r\n\r\n    const handleCloseEvent = () => {\r\n        dispatch(handleError())\r\n        setShowVal(false)\r\n\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            setShowVal(true)\r\n            setDeleteVal(false)\r\n        }\r\n\r\n\r\n\r\n\r\n        if (document.querySelector('.error_id')) {\r\n            window.setTimeout(function () {\r\n                document.querySelector('.error_id').style.display = 'none'\r\n            }, 3000)\r\n        }\r\n\r\n        if (document.querySelector('.alert_id')) {\r\n            window.setTimeout(function () {\r\n                setSuccessVal(false)\r\n            }, 3000)\r\n        }\r\n\r\n        if (document.querySelector('.delete_id')) {\r\n            window.setTimeout(function () {\r\n                setDeleteVal(false);\r\n            }, 3000)\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, error, successVal, deleteVal])\r\n    return (\r\n        <>\r\n\r\n            <div className=\"component2\">\r\n\r\n                <h2 className=\"component2_heading\"><i className=\"fas fa-list\"></i> To Do's</h2>\r\n                {\r\n                    successVal == true &&\r\n                    <Alert variant=\"success\" className=\"alert_id\">\r\n                        Note Updated Successfully\r\n            </Alert>\r\n                }\r\n\r\n                {\r\n                    deleteVal == true &&\r\n                    <Alert variant=\"danger\" className=\"delete_id\">\r\n                        Note Deleted Successfully\r\n            </Alert>\r\n                }\r\n                {Object.keys(notesDetails).length !== 0 ? (\r\n                    Object.entries(notesDetails).map(keys => (\r\n\r\n                        <div className=\"style_dates_div\">\r\n                            <h3 className=\"date_heading\">\r\n                                <i className=\"fas fa-calendar-week\"></i> {keys[0]}\r\n                            </h3>\r\n                            <ol>\r\n\r\n                                {\r\n\r\n                                    keys[1].map(item => (\r\n\r\n                                        <div className=\"list_items\">\r\n                                            <li key={item.id}>{item.title} <i className=\"fas fa-eye view_icon\" onClick={() => { handleClick(keys[0], item.title, item.description) }}></i> <i className=\"far fa-edit edit_icon\" onClick={() => { handleUpdate(keys[0], item.id, item.title, item.description) }}></i></li>\r\n                                            <hr />\r\n                                        </div>\r\n\r\n\r\n                                    ))\r\n                                }\r\n\r\n                            </ol>\r\n\r\n                        </div>\r\n\r\n                    ))\r\n                ) : (\r\n                        <div className=\"no_notes\">No notes Added!!</div>\r\n                    )\r\n                }\r\n\r\n\r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"modal_date_heading\">{newDate ? newDate : \"loading\"}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n\r\n                            <Form.Group controlId=\"formBasictitle\">\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter Title..\" value={title} onChange={(e) => setTitle(e.target.value)} readOnly />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicDesc\">\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={3} value={description} onChange={(e) => setDescription(e.target.value)} readOnly />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n\r\n                        <Button variant=\"danger\" onClick={handleClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n                {/*modal which appears on update button click*/}\r\n\r\n\r\n                <Modal show={showVal} onHide={handleCloseEvent}>\r\n                    {\r\n                        error &&\r\n                        <Alert variant='danger' className=\"error_id\">\r\n                            {error}\r\n                        </Alert>\r\n                    }\r\n\r\n\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title id=\"modal_date_heading\">{newDate ? newDate : \"\"}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicOldDate\" hidden>\r\n                                <Form.Label>old Date</Form.Label>\r\n                                <Form.Control type=\"text\" value={oldDate} onChange={(e) => setOldDate(e.target.value)} readOnly />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicdate\">\r\n                                <Form.Label>Date</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter Date..\" value={newDate} onChange={(e) => setNewDate(e.target.value)} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasictitle\">\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter Title..\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formBasicDesc\">\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={3} value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n\r\n                        <Button variant=\"secondary\" onClick={onUpdate}>\r\n                            Update\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={onDelete}>\r\n                            Delete\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Component2;","import './App.css';\nimport NavbarComponent from './components/Navbar';\nimport Component1 from './components/Component1'\nimport Component2 from './components/Component2'\nimport {Container,Row,Col} from 'react-bootstrap'\nimport './bootstrap.min.css'\nfunction App() {\n  return (\n    <>\n      <NavbarComponent/>\n      <Container>\n        <Row>\n          <Col md={6} lg={6} sm={6} xs={6}>\n            <Component1/>\n          </Col>\n          <Col md={6} lg={6} sm={6} xs={6}>\n          <Component2/>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { ADD_NOTE, UPDATE_NOTE, DELETE_NOTE, ERROR_CONSTANT } from '../Constants/constants';\r\n\r\n\r\nconst notesData = localStorage.getItem('notes') ? JSON.parse(localStorage.getItem('notes')) : {};\r\nvar id = localStorage.getItem('id') ? JSON.parse(localStorage.getItem('id')) : 0;\r\nconst initialState = {\r\n    data: notesData,\r\n    id: id,\r\n    error: ''\r\n}\r\n\r\nexport const NoteReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_NOTE:\r\n\r\n            var flag = 0;\r\n            var obj = {}\r\n            var { dateval, title, description } = action.payload;\r\n            if (Object.keys(state.data).length !== 0) {\r\n                for (var key in state.data) {\r\n                    if (key == dateval) {\r\n                        flag = 1;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (flag === 1) {\r\n\r\n                    let copy_object = { ...state.data }\r\n                    let id = state.id;\r\n                    copy_object[key].push({ id, title, description })\r\n                    return {\r\n                        data: copy_object,\r\n                        id: id + 1\r\n                    }\r\n                }\r\n\r\n                else if (flag === 0) {\r\n\r\n                    let copy_object = { ...state.data }\r\n                    let id = state.id;\r\n                    copy_object[dateval] = [{ id, title, description }]\r\n                    return {\r\n                        data: copy_object,\r\n                        id: id + 1\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            else {\r\n                let id = state.id;\r\n                obj[dateval] = [{ id, title, description }]\r\n\r\n                return {\r\n                    data: obj,\r\n                    id: id + 1\r\n                }\r\n\r\n\r\n            }\r\n        // //obj={\r\n        //'nov 2020':[{'ok','fine'}]\r\n        // }\r\n\r\n        case UPDATE_NOTE:\r\n            var { idVal, newDate, oldDate, titleVal, descriptionVal, flag } = action.payload\r\n            if (flag === 'yes')  //old and new date equal\r\n            {\r\n\r\n                let objCopy = JSON.parse(JSON.stringify(state.data)) //creating deep copy\r\n\r\n                Object.entries(objCopy).find(item => {\r\n                    if (item[0] == newDate) {\r\n                        item[1].find(items => {\r\n                            if (items.id == idVal) {\r\n                                items.title = titleVal ? titleVal : items.title;\r\n                                items.description = descriptionVal ? descriptionVal : items.description;\r\n\r\n                            }\r\n                        })\r\n\r\n                        objCopy[item[0]] = item[1]\r\n                    }\r\n\r\n\r\n                })\r\n\r\n\r\n\r\n                return {\r\n                    data: objCopy,\r\n                    id: state.id\r\n                }\r\n            }\r\n            else { //old and new date are not equal\r\n                let objCopy = JSON.parse(JSON.stringify(state.data))\r\n                //deleting the item from old date\r\n                let updatedData = \"\";\r\n                Object.entries(objCopy).find(item => {\r\n                    if (item[0] == oldDate) {\r\n\r\n                        updatedData = item[1].filter(items => items.id !== idVal)\r\n                        objCopy[item[0]] = updatedData;\r\n                        if (objCopy[item[0]].length == 0) {\r\n                            delete (objCopy[item[0]]);\r\n                        }\r\n\r\n                    }\r\n\r\n\r\n                })\r\n\r\n                if (objCopy[newDate]) {\r\n                    let id = idVal;\r\n                    let title = titleVal;\r\n                    let description = descriptionVal;\r\n                    objCopy[newDate].push({ id, title, description })\r\n                }\r\n                else {\r\n                    let id = idVal;\r\n                    let title = titleVal;\r\n                    let description = descriptionVal;\r\n                    objCopy[newDate] = [{ id, title, description }]\r\n                }\r\n\r\n\r\n                return {\r\n                    data: objCopy,\r\n                    id: state.id\r\n                }\r\n            }\r\n\r\n\r\n\r\n        case DELETE_NOTE:\r\n\r\n            let { idValues, newDateVal } = action.payload;\r\n            var updateObj = JSON.parse(JSON.stringify(state.data))\r\n            let updatedData = [];\r\n            let flagval = 0;\r\n            Object.entries(updateObj).find(item => {\r\n                if (item[0] == newDateVal) {\r\n\r\n                    updatedData = item[1].filter(items => items.id !== idValues)\r\n                    updateObj[item[0]] = updatedData;\r\n                    if (updateObj[item[0]].length == 0) {\r\n                        delete (updateObj[item[0]]);\r\n                    }\r\n\r\n                    flagval = 1;\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n            })\r\n\r\n            if (flagval == 1)  //means that this key value pair has been found\r\n            {\r\n                return {\r\n                    data: updateObj,\r\n                    id: state.id,\r\n                    error: ''\r\n                }\r\n            }\r\n\r\n            else if (flagval == 0) {\r\n                return {\r\n                    data: updateObj,\r\n                    id: state.id,\r\n                    error: 'Note corresponding to this date does not exists!!'\r\n                }\r\n            }\r\n\r\n        case ERROR_CONSTANT: return {\r\n            data: state.data,\r\n            id: state.id,\r\n            error: ''\r\n        }\r\n\r\n\r\n        default: return state;\r\n\r\n    }\r\n\r\n}","import {createStore,combineReducers,applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {NoteReducer} from './Reducer/noteReducer';\r\n\r\nconst middleware=[thunk]\r\nconst store=createStore(NoteReducer,composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Redux/store.js';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}